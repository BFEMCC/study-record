"""
序列是指:内容连续、有序，可使用下标索引的一类数据容器
列表、元组、字符串，都是序列
切片指：从一个序列中取出一个子序列

语法:
    序列[起始下标:结束下标:步长]
    表示从序列中，从指定位置开始，依次取出元素，到指定位置结束，得到一个新序列
        起始下标表示从何处开始，可以留空，留空视作从头开始
        结束下标  (不含结束下标元素) 表示何处结束，可以留空，留空视作截取到结尾
        步长表示，依次取元素的间隔
        步长1表示，一个个取元素
        步长2表示，每次跳过1个元素取
        步长N表示，每次跳过N-1个元素取
        步长为负数表示，反向取(注意，起始下标和结束下标也要反向标记)
对序列进行切片不会影响序列本身，而是得到一个新序列
"""

# 对list进行切片
my_list = [0, 1, 2, 3, 4, 5, 6]
new_list = my_list[1:4:1]  # 从1开始，4结束，步长为1
print(new_list)

# 对tuple进行切片
my_tuple = (0, 1, 2, 3, 4, 5, 6)
new_tuple = my_tuple[:]  # 从头开始，到最后结束，步长为1，这种情况全都可以省略，只需要一个冒号即可
print(new_tuple)

# 对str进行切片
my_str = "01234567"
new_str = my_str[::2]  # 从头开始，到最后结束，步长为2
print(new_str)

# 对str进行切片
new_str = my_str[::-1]  # 从头开始，到最后结束，步长为-1
print(new_str)  # -1表示从后往前取，及从尾部往前取，每次取一个，相当于反转

# 对列表进行切片
my_list = [0, 1, 2, 3, 4, 5, 6]
new_list = my_list[3:1:-1]  # 从3开始，1结束，步长为-1
print(new_list)  # -1表示从后往前取，及从3往前取每次取一个，取到1结束

# 对元组进行切片
my_tuple = (0, 1, 2, 3, 4, 5, 6)
new_tuple = my_tuple[::-2]  # 从头开始，到最后结束，步长为-2
print(new_tuple)  # 即从后往前每隔2个取一个
